pipeline {
     agent { docker { image 'php' } }
    stages {
        stage('Build')
            steps {
                sh '''
                sh 'php --version'
               /* composer install
                
                echo DB_HOST=${DB_HOST} >> .env
                echo DB_USERNAME=${DB_USERNAME} >> .env
                echo DB_DATABASE=${DB_DATABASE} >> .env
               echo DB_PASSWORD=${DB_PASSWORD} >> .env
                ./vendor/bin/phpunit ./tests
                cp .env .env.testing
                php artisan migrate
                '''
               
            }
        }
        stage('Unit test') {
            steps {
                
                sh 'composer --version'
                sh 'cp .env.example .env'
                sh 'php artisan key:generate'
                sh 'php artisan config:cache'
              
            }
        }
        stage('Code coverage') {
            steps {
                
                sh 'vendor/bin/phpunit --coverage-html 'reports/coverage''
               
            }
        }
        stage('Static code analysis larastan') {
            steps {
              
              sh 'vendor/bin/phpstan analyse --memory-limit=2G'  
              
            }
        }
        stage('Static code analysis phpcs') {
            steps {
                sh '''
                vendor/bin/phpcs
                '''
            }
        }
        
      
 }
